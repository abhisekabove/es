{"name":"Es","tagline":"","body":"### Welcome to Dabuntu\r\n\r\nEventShop is used for Personalized Situation Detection and Control by combining heterogeneous web streams. Data streams generated by social media, sensor networks, internet of things, and digitalization of transactions provide us with abundance of data which when analysed will provide us with valuable data which can be used to detect patterns to notify when a particular situation occurs.\r\n\r\n### About Us\r\n\r\nAbove Solutions, Inc. is a company which believes in an “Innovative Team Delivering Transformative Solutions”. Established in 2008, ABOVE Solutions, Inc. combines a passion for technology and customer satisfaction to deliver transformative solutions that creates economic and social value. We have contributed to Eventshop making it scalable, robust and support a wide range of data formats.\r\n\r\n### Contact Us\r\n\r\nhttp://above-inc.com/\r\n\r\n### Data Ingestion Layer\r\n\r\nData available in the Internet is of different formats and it has to be unified to a common format. The solution provided is to convert it into STT (Space Time Theme, STT) format. The data is then converted to a two dimensional grid called the Emage. Any CSV, Json, Xml or twitter data source can now be converted to a STT format using eventshop. Once the data sources are created, different spatio-temporal like min, max, average, sum, majority, split uniform, linear_interpolation.\r\n\r\n### Rule Engine\r\n\r\nThe rules engine is used to query the data stored by the data source. The rules engine is a mongo specific implementation but can be changed for any other kind of Database.\r\n\r\nThe idea of the rule engine is to query the data stored in the DB. The fields required as an output should be specified in the Extract Field. Select the field in which you want to query and select the query operator and specify the parameters as a comma separated value. The query operators populated depend on the data type specified in the data syntax when configuring the Data source.\r\n\r\n### Query Processing Framework\r\n\r\nA Query Plan tree is constructed to perform the different operations on the emage generated. The query tree is parsed to check if it can be executed in an asynchronous manner and events are generated to perform each query operation.\r\n\r\n### Alert Framework\r\n\r\nAlert Framework is used to set up notify any abnormal conditions in the raw data or transformed data. Alerts can be created either on Query or Data Source and can be also be created to provide any solution if any.\r\n\r\n### Source code\r\n\r\nhttps://github.com/dabuntu/es\r\n\r\n### Demo server\r\n\r\nA demo of Eventshop is deployed in http://54.254.138.95/eventshoplinux/\r\n\r\nFor help on setting up Datasources, Rules or Queries, subscribe to our youtube channel https://www.youtube.com/playlist?list=PL2sIMyXzRPMIwUwXGwWdB5IiGMJITvn4-","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}